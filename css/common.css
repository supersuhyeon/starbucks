@charset "utf-8";
/* common */

html,body{font-family: 'Nanum Gothic', sans-serif; color: #333;
font-size: 16px; font-weight: 400; line-height: 1.4;}
img{display: block;}
a{text-decoration: none;}

.inner{

    width: 1100px;
    margin: 0 auto;
    position: relative;
}

.btn{
    width: 130px;
    padding: 10px;
    border: 2px solid #333;
    border-radius: 4px;
    color: #333;
    font-size: 16px;
    font-weight: 700;
    text-align: center;
    cursor: pointer;
    box-sizing: border-box;
    display: block;
    transition: 0.4s;
}
.btn:hover{

    background-color: #333;
    color: #fff;
}

.btn.btn--reverse{

    background-color: #333;
    color: #fff;
}

.btn.btn--reverse:hover{

    background-color: transparent;
    color: #333;
}

.btn.btn--brown{
color: #592818;
border-color: #592818;

}

.btn.btn--brown:hover{

    color: #fff;
    background-color: #592818;
}

.btn.btn--gold{
color: #fff;
border-color: #fff;
}

.btn.btn--gold:hover{
    color: #fff;
    border-color: #fff;
}

.btn.btn--white{
    color: #fff;
    border-color: #fff;
}
.btn.btn--white:hover{

    color: #333;
    background-color: #fff;
}

.back-to-position{
    opacity: 0;
    transition: 1s;
}

.back-to-position.to-right{
    transform: translateX(-150px);
}

.back-to-position.to-left{
    transform: translateX(150px);
}

.show .back-to-position{
    opacity: 1;
    transform: translateX(0);
}

.show .back-to-position.delay-0{
transition-delay: 0s;
}

.show .back-to-position.delay-1{
transition-delay: .3s;
}

.show .back-to-position.delay-2{

    transition-delay: .6s;
}

.show .back-to-position.delay-3{

    transition-delay: .9s;
}



/* header */
header{

    /* position: relative; */
width: 100%;
/* 가로너비를 최대한 사용하라 */
    background-color: #f6f5f0;
    border-bottom: 1px solid #c8c8c8;
    position: fixed;
    /* 브라우저의 뷰포트를 기준으로 배치하겠다 헤더라는 요소의 가로너비는 기본값이 auto이고
    요소의 너비를 최대한 사용하는게 아니라 가로너비를 최소한으로 사용하려고한다
    이현상은 position ab과 fixed에서 발생하게됨 일반적으로 block요소는 가로너비가 최대한 늘어날려고
    시도하지만 ab과 fixed는 가로너비를 최소한으로 하려고해서 width를 무조건 100%사용하도록 해야함 */
    top: 0;
    z-index: 9;
 
}

header > .inner{
    height: 120px;
    width: 1100px;
    margin: 0 auto;
    /* width랑 마진 0 auto를 맞춰 가운데 정렬을 시킬수있음 */
    position: relative;
}

header .inner .logo{
position: absolute;
top: 0;
bottom: 0;
left: 0;
margin: auto;
height: 75px;
}

header .inner .logo img{}

header .sub-menu{
    display: flex;
    position: absolute;
    top: 10px;
    right: 0px;

}

header .sub-menu ul.menu{
font-family: Arial, Helvetica, sans-serif;
    display: flex;

}

header .sub-menu ul.menu li{

    position: relative;
}
header .sub-menu ul.menu li::before{

    content: "";
    display: block;
    width: 1px;
    height: 12px;
    background-color: #e5e5e5;
    position: absolute;
    top: 0;
    bottom: 0;
    margin: auto 0;

}

header .sub-menu ul.menu li:first-child::before{
    display: none;
}


header .sub-menu ul.menu li a{
    display: block;
    font-size: 12px; 
    padding: 11px 16px;
    color: #656565;
    
}

header .sub-menu ul.menu li a:hover{

    color: #000;

}

header .sub-menu .search{


    height: 34px;
    position: relative;
}

header .sub-menu .search input{

    width: 36px;
    height: 34px;
    padding: 4px 10px;
    border: 1px solid #ccc;
    box-sizing: border-box;
    border-radius: 5px;
    outline: none;
    background-color: #fff;
    font-size: 12px;
    transition: width .4s;
}

header .sub-menu .search input:focus{

    width: 190px;
    border-color: #669900;
}

header .sub-menu .search .material-icons{

    position: absolute;
    top: 0;
    bottom: 0;
    right: 5px;
    margin: auto;
    height: 24px;
    transition: .4s;

}

header .sub-menu .search.focused .material-icons{
/* .search태그에 focused클래스가부여됨(자바랑연동) .materail-icons가 opacity사라져라 */
opacity: 0;
}

header .main-menu{
    display: flex;
    position: absolute;
    bottom: 0;
    right: 0;
    z-index: 1;
}

header .main-menu .item{


}

header .main-menu .item .item__name{
padding: 10px 20px 34px 20px;
font-family: Arial, Helvetica, sans-serif;
font-size: 13px;

}

header .main-menu .item:hover .item__name{
background-color: #2c2a29;
color: #669900;
border-radius: 6px 6px 0 0;

}

header .main-menu .item .item__contents{
width: 100%;
position: fixed;
/* 뷰포트를 기준으로 배치하겠다 
웹브라우저의 왼족상단을 기준으로 위치값을 갖는다*/
left: 0;
/* top이나 bottom 속성을 사용하지 않아 수직 위치 값이 없다면
요소의 원래 위치를 그대로 사용한다
만약 position:absolute;를 사용했다면 (위치상) 부모요소기준으로 하므로
화면의 뷰포트 좌우끝까지 늘어날수없게된다 */
display: none;
}

header .main-menu .item:hover .item__contents{
/* item에 호버를 하면 .item__contents가 display:block이되라 */
    display: block;
}

header .main-menu .item .item__contents .contents__menu{
background-color: #2c2a29;

}

header .main-menu .item .item__contents .contents__menu > ul{

display: flex;
padding: 20px 0;
}

header .main-menu .item .item__contents .contents__menu > ul > li{

width: 220px;
}

header .main-menu .item .item__contents .contents__menu > ul > li h4{

    padding: 3px 0 12px 0;
    font-size: 14px;
    color: #fff;

}

header .main-menu .item .item__contents .contents__menu > ul > li ul{}

header .main-menu .item .item__contents .contents__menu > ul > li ul li{

padding: 5px 0;
font-size: 12px;
color: #999;
cursor: pointer;
}

header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover{

    color: #669900;
}

header .main-menu .item .item__contents .contents__texture{
font-size: 12px;
padding: 26px 0;
background-image: url(/images/main_menu_pattern.jpg);
}

header .main-menu .item .item__contents .contents__texture h4{
color: #999;
font-weight: 700;
font-size: 12px;
}

header .main-menu .item .item__contents .contents__texture p{
color: #669900;
margin: 4px 0 14px;
/* 마진에 값이 3개일때 상중하로 해석, 네개일땐 시계방향으로 상오하왼 */
font-size: 12px;
}

header .badges{

    position: absolute;
    top: 132px;
    right: 12px;

}

header .badges .badge{
border-radius: 10px;
/* img의 부모인 badge에 둥근선을 만들어놓는다 */
overflow: hidden;
/* 둥근선을 만들어놓고 사진이 그밖으로 넘치치 않게 한다 */
margin-bottom: 12px;
box-shadow: 4px 4px 10px rgba(0,0,0,0.15);
cursor: pointer;
}


/* FOOTER */

footer{

    background-color: #272727;
    border-top: 1px solid #333;

}

footer .inner{

    padding: 40px 0 60px 0;

}

footer .inner .menu{

    display: flex;
    justify-content: center;

}

footer .inner .menu li{

    position: relative;
}

footer .inner .menu li::before{
    content: '';
    width: 3px;
    height: 3px;
    background-color: #555;
    position: absolute;
    top: 0;
    bottom: 0;
    margin: auto;
 

    /* display: block; 이미 position 를 사용해서 디스플레이가 블럭이됨 */
    
}

footer .inner .menu li:first-child::before{
display: none;
}

footer .inner .menu li a{

    color: #ccc;
    font-size: 12px;
    font-weight: 700;
    padding: 15px;
    /* 인라인요소는 패딩 상하가 먹히지를 않음 그래서 디스플레이블럭해줌 */
    display: block;
    /* 사람들이 a (인라인태그) 요소를 큰범위에서 눌러주기위함 */
    
}

footer .inner .menu li a.green {
    color: green;
}

footer .btn-group{

margin-top: 20px;
display: flex;
justify-content: center;
/* 수평정렬 */

}

footer .btn-group .btn{

font-size: 12px;
margin-right: 10px;

}

footer .btn-group .btn:last-child{

    margin-right: 0;
}

footer .info{
/* span태그는 인라인블럭이기때문에 가로로 쌓임 */
margin-top: 30px;
text-align: center;
}

footer .info span{

margin-right: 20px;
color: #999;
font-size: 12px;
}

footer .info span:last-child{
    margin-right: 0;
}

footer .copyright{

    color: #999;
    font-size: 12px;
    text-align: center;
    margin-top: 12px;
}

footer .logo{ 

    margin: 30px auto 0;
    /* margin에 세 값이 있으면 상중하를 뜻함 위에있는 카피라이트와 로고 사이의 간격을 30픽셀로 띄워줬고 
    가로를 정렬해주는 공식 중 margin 좌우를 auto로 하면 중간에오기때문에 상중하중 좌우를 맡고있는 중
    에 auto값을 줘서 로고 이미지를 중간에 배치시킴. 패딩 바텀 2rem값을 갖고 밑에 여백을 갖게 되는데
    그럴필요없으니 하 부분은 값 0으로 설정 
    margin 가로로 수평 가운데 정렬하는법
    1. 자식요소가 display block 일때
    2. 자식요소의 width값이 명시되어있을때
    3. 자식요소의 margin 좌우를 auto로 할것(0,auto)*/
    /* marginauto를 하려면 가로값을 알고있어야함 이미 img태그를썻다는건 가로값을 브라우저가 아니까
    자동적으로 계산 */
    padding-bottom: 2rem;
    
}
